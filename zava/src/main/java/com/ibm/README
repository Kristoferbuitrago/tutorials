##classloader
https://www.ibm.com/developerworks/cn/java/j-lo-classloader/

##niosvr
http://www.ibm.com/developerworks/cn/java/l-niosvr/

##jzerocopy
Investigating the zero copy performance, forked from http://www.ibm.com/developerworks/library/j-zerocopy/

Simple tests:

Using traditional copy
bytes send--54123305 and totaltime in Millisecond--7167
bytes send--54123305 and totaltime in Millisecond--7830
bytes send--54123305 and totaltime in Millisecond--6607

Server using zerocopy on ubuntu 11
total bytes transferred--54123304 and time taken in Millisecond--4719
total bytes transferred--54123304 and time taken in Millisecond--4712
total bytes transferred--54123304 and time taken in Millisecond--4960
total bytes transferred--54123304 and time taken in Millisecond--4790

##jtp
Java 理论与实践
====
http://www.ibm.com/developerworks/cn/java/j-jtp/


非阻塞算法简介: https://www.ibm.com/developerworks/cn/java/j-jtp04186/

##jactor
http://www.ibm.com/developerworks/cn/java/j-javaactors/index.html
http://www.ibm.com/developerworks/library/j-javaactors/

消息 是在 actor 之间发送的消息。
ActorManager 是一个 actor 管理器。它负责向 actor 分配线程（进而分配处理器）来处理消息。
Actor 是一个执行单元，一次处理一条消息。


下图显示了 actor 之间的关系。每个 actor 可向其他 actor 发送消息。
这些消息保存在一个消息队列（也称为邮箱；从概念上讲，每个 actor 有一个队列，
当 ActorManager 看到某个线程可用于处理消息时，就会从队列中删除该消息，并将它传送给在线程下运行的 actor，以便处理该消息。

![overview](actor-overview.gif "actor-overview")


##jasm
http://www.ibm.com/developerworks/cn/java/j-lo-asm30/

##jnio
http://www.ibm.com/developerworks/cn/education/java/j-nio/j-nio.html

##jnio2
http://www.ibm.com/developerworks/cn/java/j-nio2-2/